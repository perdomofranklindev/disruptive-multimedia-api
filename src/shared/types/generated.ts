// This file was auto-generated by prisma-generator-typescript-interfaces

export enum PermissionType {
	READ = 'READ',
	CREATE = 'CREATE',
	UPDATE = 'UPDATE',
	DELETE = 'DELETE'
}

export enum RoleType {
	READER = 'READER',
	CREATOR = 'CREATOR',
	ADMINISTRATOR = 'ADMINISTRATOR'
}

export enum CategoryType {
	TEXT = 'TEXT',
	IMAGE = 'IMAGE',
	URL = 'URL',
	FILE = 'FILE',
	VIDEO = 'VIDEO'
}

export interface User {
	id: string;
	username: string;
	email: string;
	password: string;
	role?: Role;
	roleId: string;
	sessions?: Session[];
	Contents?: Content[];
	createdAt: Date;
	updatedAt: Date;
}

export interface Role {
	id: string;
	name: string;
	title: string | null;
	description: string | null;
	permissions: PermissionType[];
	users?: User[];
	createdAt: Date;
	updatedAt: Date;
}

export interface Session {
	id: string;
	token: string;
	user?: User | null;
	userId: string | null;
	expiredAt: Date;
	createdAt: Date;
	updatedAt: Date;
}

export interface Theme {
	id: string;
	name: string;
	thumbnail: string | null;
	content?: Content[];
	createdAt: Date;
	updatedAt: Date;
}

export interface Content {
	id: string;
	name: string;
	description: string | null;
	thumbnail: string | null;
	theme?: Theme | null;
	themeId: string | null;
	permissions: PermissionType[];
	contentCategories?: ContentCategory[];
	userId: string;
	createdBy?: User;
	createdAt: Date;
	updatedAt: Date;
}

export interface ContentCategory {
	id: string;
	data: string;
	content?: Content | null;
	contentId: string | null;
	category?: Category;
	categoryId: string;
	createdAt: Date;
	updatedAt: Date;
}

export interface Category {
	id: string;
	name: string;
	permissions: PermissionType[];
	ContentCategories?: ContentCategory[];
	createdAt: Date;
	updatedAt: Date;
}

export interface Task {
	id: string;
	name: string;
	createdAt: Date;
	updatedAt: Date;
}
